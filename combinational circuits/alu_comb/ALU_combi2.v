// File: ALU_combi2.v
// Generated by MyHDL 0.11.42
// Date: Sun Dec 17 09:21:13 2023


`timescale 1ns/10ps

module ALU_combi2 (
    q,
    o,
    z,
    n,
    a,
    b,
    f
);
// Simple ALU.
// See ARM System Aerchitecture "Introduction To Processor Design"

output [15:0] q;
reg [15:0] q;
output o;
reg o;
output z;
reg z;
output n;
reg n;
input [15:0] a;
input [15:0] b;
input [3:0] f;

reg [15:0] result;



always @(f, a, b) begin: ALU_COMBI2_ALU_FUNC
    case (f)
        4'b0000: begin
            result = 0;
        end
        4'b0001: begin
            result = ((2 ** 16) - 1);
        end
        4'b0011: begin
            result = ((-a) % (2 ** 16));
        end
        4'b0110: begin
            result = ((-b) % (2 ** 16));
        end
        4'b1001: begin
            result = (~a);
        end
        4'b1010: begin
            result = (~b);
        end
        4'b0010: begin
            result = a;
        end
        4'b0101: begin
            result = b;
        end
        4'b0100: begin
            result = (a + 1);
        end
        4'b0111: begin
            result = (b + 1);
        end
        4'b1011: begin
            result = (a & b);
        end
        4'b1100: begin
            result = (a | b);
        end
        4'b1101: begin
            result = (a ^ b);
        end
        4'b1000: begin
            result = (a + b);
        end
        default: begin
            result = 0;
        end
    endcase
end


always @(f, result, b, a) begin: ALU_COMBI2_ALU_STATUS
    q = result;
    if ((result == 0)) begin
        z = 1;
    end
    else begin
        z = 0;
    end
    n = result[(16 - 1)];
    if (((f == 4'b1000) || (f == 4'b0100) || (f == 4'b0111))) begin
        if (((a[(16 - 1)] == b[(16 - 1)]) && (result[(16 - 1)] != a[(16 - 1)]))) begin
            o = 1;
        end
        else begin
            o = 0;
        end
    end
    else begin
        o = 0;
    end
end

endmodule
